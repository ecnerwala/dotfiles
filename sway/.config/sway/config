### Variables

# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
set $menu j4-dmenu-desktop --dmenu="wmenu" --no-generic --display-binary --term="$term"

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input type:touchpad {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
   input type:keyboard {
       xkb_options "caps:escape"
   }
#
# You can also configure each device individually.
# Read `man 5 sway-input` for more information about this section.

font pango:DejaVu Sans Mono 9.5

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+Space exec $menu

    bindsym $mod+Escape exec swaylock -c 202020 -f && swaymsg "output * power off"
    bindsym --locked $mod+Shift+Escape exec swaymsg "output * power on"
    # bindsym $mod+Escape exec swaylock -c 202020 -f

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym $mod+Tab workspace next_on_output
    bindsym $mod+Shift+Tab workspace prev_on_output
    # grrr... there's no output next
    bindsym $alt+Tab focus output right

    # change focus window
    bindsym $mod+Ctrl+Shift+$left move workspace to output left
    bindsym $mod+Ctrl+Shift+$down move workspace to output down
    bindsym $mod+Ctrl+Shift+$up move workspace to output up
    bindsym $mod+Ctrl+Shift+$right move workspace to output right

    # alternatively, you can use the cursor keys:
    bindsym $mod+Ctrl+Shift+Left move workspace to output left
    bindsym $mod+Ctrl+Shift+Down move workspace to output down
    bindsym $mod+Ctrl+Shift+Up move workspace to output up
    bindsym $mod+Ctrl+Shift+Right move workspace to output right

    bindsym $mod+Shift+space fullscreen


#
# Layout stuff:
#
#    # You can "split" the current object of your focus with
#    # $mod+b or $mod+v, for horizontal and vertical splits
#    # respectively.
#    bindsym $mod+b splith
#    bindsym $mod+v splitv
#
#    # Switch the current container between different layout styles
#    bindsym $mod+s layout stacking
#    bindsym $mod+w layout tabbed
#    bindsym $mod+e layout toggle split
#
#    # Make the current focus fullscreen
#    bindsym $mod+f fullscreen
#
#    # Toggle the current focus between tiling and floating mode
#    bindsym $mod+Shift+space floating toggle
#
#    # Swap focus between the tiling area and the floating area
#    bindsym $mod+space focus mode_toggle
#
#    # Move focus to the parent container
#    bindsym $mod+a focus parent

    # change container layout (stacked, tabbed, toggle split)
    bindsym $mod+y layout splitv
    bindsym $mod+u layout splith
    bindsym $mod+i layout stacking
    bindsym $mod+o layout tabbed

    bindsym $mod+Shift+y split h; layout splitv
    bindsym $mod+Shift+u split h; layout splith
    bindsym $mod+Shift+i split h; layout stacking
    bindsym $mod+Shift+o split h; layout tabbed

    # toggle tiling / floating
    bindsym $mod+Shift+f floating toggle

    # change focus between tiling / floating windows
    bindsym $mod+f focus mode_toggle

    # focus the parent container
    bindsym $mod+p focus parent

    # focus the child container
    bindsym $mod+n focus child

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10 px or 10 ppt
    bindsym $down resize grow height 10 px or 10 ppt
    bindsym $up resize shrink height 10 px or 10 ppt
    bindsym $right resize grow width 10 px or 10 ppt
    bindsym Shift+$left resize shrink width 1 px or 1 ppt
    bindsym Shift+$down resize grow height 1 px or 1 ppt
    bindsym Shift+$up resize shrink height 1 px or 1 ppt
    bindsym Shift+$right resize grow width 1 px or 1 ppt

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt
    bindsym Shift+Left resize shrink width 1 px or 1 ppt
    bindsym Shift+Down resize grow height 1 px or 1 ppt
    bindsym Shift+Up resize shrink height 1 px or 1 ppt
    bindsym Shift+Right resize grow width 1 px or 1 ppt

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

output "eDP-1" scale 1.25

#
# Utilities:
#
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Special key to take a screenshot with grim
    bindsym Print exec /usr/share/sway-contrib/grimshot savecopy anything
    bindsym XF86Display exec nwg-displays

#
# Notifications
#

    bindsym $mod+Period exec makoctl dismiss
    bindsym $mod+Shift+Period exec makoctl dismiss --all
    bindsym $mod+Comma exec makoctl restore
    bindsym $mod+Shift+Comma exec makoctl menu wmenu

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position bottom

    swaybar_command waybar

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command i3status

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #323232 #323232 #5c5c5c
    }
}

exec dropbox-cli start

include /etc/sway/config.d/*
